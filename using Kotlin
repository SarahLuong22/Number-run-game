import kotlin.random.Random

//to find the divisor of a number
fun divisor(number: Int): List<Int> {
  var divisors : List<Int> = listOf()
  for (i in 2.rangeTo(number/2+1)) {
    if (number % i == 0) {
      divisors += i
    }
  }
  if (divisors.isEmpty()) {
    divisors += number
  }
  return divisors
}

//to  effectuate/perform an Operator(which is a string)
fun strToOperator(number1: Int, number2: Int, str_operator: String): Int {
  var result: Int = 0
  if (str_operator == "+") {
    result = (number1 + number2) 
  } else if (str_operator == "-") {
    result = (number1 - number2)
  } else if (str_operator == "*") {
    result =  (number1 * number2) 
  } else if (str_operator == "/") {
    if (number1 % number2 == 0) {
      result =  number1 / number2
    } else {
      result =  -1
    }
    
  }
  return result
}

//at least how many choices is safe = num_of_safe_choice
//order of safe and risk choice
fun choiceSafetyOrder (num_of_safe_choice: Int): List<Boolean> {
  var order: List<Boolean> = listOf(true, true, true)
  if (num_of_safe_choice == 3) {
    order = listOf(true, true, true)
  } else if (num_of_safe_choice == 2) { 
    order = listOf(true, true, false).shuffled()
  } else if (num_of_safe_choice == 1) {
    order = listOf(true, false, false).shuffled()
  }
  return order
}


// generating safe choice
fun safeChoice(operatorList: MutableList<String>, yourNum: Int): Pair<String, Int> {

  var operator: MutableList<String> = operatorList
    
  if (yourNum == 1) {
    for (i in operatorList) {
      if (i.equals("-") or i.equals("/")) {
        operator.remove(i)
      }
    }
  }
  
  if (yourNum == 100) {
    for (i in operatorList) {
      if (i == "+") {
        operator.remove(i)
      } 
    }
  }
  
  if (yourNum >= 50) {
    for (i in operatorList) {
      if (i == "*") {
        operator.remove(i)
      } 
    } 
  }
      
  var choiceOperator = operator.random()
  // operator.remove(choice_operator)
  var choiceNum: Int = 2
  
  if (choiceOperator == "+") {
    choiceNum = Random.nextInt(yourNum+1, 100) - yourNum
  } else if (choiceOperator == "-") {
    choiceNum = yourNum - Random.nextInt(1, yourNum-1)
  } else if (choiceOperator == "*") {
    choiceNum = Random.nextInt(yourNum*2 - 1, 100)/yourNum
  } else if (choiceOperator == "/") {
    choiceNum = divisor(yourNum).random()
  }
  
  return Pair(choiceOperator, choiceNum)
}

// generating risk choice
fun riskChoice (operatorList: MutableList<String>): Pair<String, Int> {
  var operator: MutableList<String> = operatorList
  var choiceOperator = operator.random()
  // operator.remove(choice_operator)
  var choiceNum: Int = 2
       
  if (choiceOperator == "+") {
    choiceNum = Random.nextInt(1, 70)
  } else if (choiceOperator == "-") {
    choiceNum = Random.nextInt(1, 70)
  } else if (choiceOperator == "*") {
    choiceNum = Random.nextInt(2, 20)
  } else if (choiceOperator == "/") {
    choiceNum = Random.nextInt(2, 10)
  }
  
    return Pair(choiceOperator, choiceNum)
}


fun running_cycle (start_cycle, end_cycle, operator_list, safety, yourNum):
  for i in range (start_cycle, end_cycle + 1):
    order = choice_safety_order (safety)
    choice_operator = [1]*3
    choice_num = [1]*3
  
    print("Your streak is %s" % i)
  
    for z in range (3):
      if order[z] == True:
        (choice_operator[z], choice_num[z]) = safe_choice(operator_list, yourNum)
      if order[z] == False:
        choice_operator[z], choice_num[z] = risk_choice(operator_list)
      if z >=1:
        if (choice_operator[z], choice_num[z]) == (choice_operator[z-1], choice_num[z-1]):
          choice_operator[z], choice_num[z] = risk_choice(operator_list)
      if z >=2:
        if (choice_operator[z], choice_num[z]) == (choice_operator[z-2], choice_num[z-2]):
          choice_operator[z], choice_num[z] = risk_choice(operator_list)
      
      print("Choice %s: %s %s" % (z+1, choice_operator[z], choice_num[z]))
    
    userChoice = int(input("What is your choice?     "))-1
  
    yourNum = strToOperator(yourNum, choice_num[userChoice], choice_operator[userChoice])
    print (yourNum)
    if type(yourNum) != int or yourNum < 0 or yourNum > 100:
      print ("You failed. Your streak is %s" %i)
      break
    else:
      print ("Good!")
      print ()
      print ()
  return yourNum


fun main() {
  yourNum = random.randint(1, 9) #assigned initial number for player
  print ("Your number is %s" %yourNum)
  
  yourNum = running_cycle(1, 3, ["+", "-", "*", "/"], 3, yourNum)
  
  if type(yourNum) == int and yourNum >= 0 and yourNum <= 100:
    yourNum = running_cycle(4, 6, ["+", "-", "*", "/"], 2, yourNum)
    
  if type(yourNum) == int and yourNum >= 0 and yourNum <= 100:
    yourNum = running_cycle(7, 9, ["+", "-", "*", "/"], 1, yourNum)


}
